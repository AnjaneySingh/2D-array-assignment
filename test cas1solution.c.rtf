// Sample Test Case JSON (from your assignment)
const input = {
  "keys": { "n": 4, "k": 3 },
  "1": { "base": "10", "value": "4" },
  "2": { "base": "2", "value": "111" },
  "3": { "base": "10", "value": "12" },
  "6": { "base": "4", "value": "213" }
};

// Exclude the "keys" and aggregate roots
const roots = Object.entries(input)
  .filter(([key]) => key !== "keys")
  .map(([key, obj]) => {
    const base = parseInt(obj.base, 10);
    // Convert the value string to decimal using the specified base
    const value_decimal = parseInt(obj.value, base);
    return {
      original_key: key,
      base: base,
      value: obj.value,
      value_decimal: value_decimal
    };
  });

// Print result
console.log(`Total roots: ${input.keys.n}`);
console.log(`Minimum roots required (k): ${input.keys.k}`);
roots.forEach(root => {
  console.log(`Root Key: ${root.original_key} | Base: ${root.base} | Value: ${root.value} | Decimal: ${root.value_decimal}`);
});
